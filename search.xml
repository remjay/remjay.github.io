<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTML学习笔记</title>
      <link href="/2021/11/10/HTML-study/"/>
      <url>/2021/11/10/HTML-study/</url>
      
        <content type="html"><![CDATA[<h4 id="a-标签的五种使用方法"><a href="#a-标签的五种使用方法" class="headerlink" title="a 标签的五种使用方法"></a>a 标签的五种使用方法</h4><ol><li>页面跳转(herf设置地址)<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.baidu.com&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>锚点链接(herf里面#号开头)<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;#zj&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>下载文件(herf填入资源链接地址,并设置download属性设置下载文件名)<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.baidu.com/img/bd_logo1.png&#x27;</span> <span class="attr">download</span>=<span class="string">&#x27;百度图片.png&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>创建email链接 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;mailto:1727482593@qq.com&#x27;</span>&gt;</span>发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>创建Tel链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;tel:12345678&#x27;</span>&gt;</span>拨打电话<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS学习笔记</title>
      <link href="/2021/11/10/JS-study/"/>
      <url>/2021/11/10/JS-study/</url>
      
        <content type="html"><![CDATA[<h4 id="判断数据类型的方法"><a href="#判断数据类型的方法" class="headerlink" title="判断数据类型的方法"></a>判断数据类型的方法</h4><h5 id="typeof"><a href="#typeof" class="headerlink" title="typeof"></a>typeof</h5><ol><li>区分数据类型<br>可以区分7种数据类型:string,number,boolean,object,undefined,function 和es6新增的symbol</li><li>注意    - typeof 返回格式是 string  typeof(typeof(1))    - typeof 判断未定义的变量 返回 undefined    - typeof 判断null 返回object    - typeof(NaN) 返回number <h5 id="2-instanceof"><a href="#2-instanceof" class="headerlink" title="2.instanceof"></a>2.instanceof</h5></li><li>区分复杂数据类型<br>能区分Array,Object和Function数据类型,但是String,Number,Boolean的简单类型数据不能判断<br>instanceof 判断对象的原型链上是否存在构造函数的原型,且只能判断引用类型<h5 id="3-Object-prototype-toString-call"><a href="#3-Object-prototype-toString-call" class="headerlink" title="3.Object.prototype.toString.call()"></a>3.Object.prototype.toString.call()</h5></li><li>精准判断数据类型,需进行封装后判断<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">toString.call(<span class="function">()=&gt;</span>&#123;&#125;) <span class="comment">//[object Function]</span></span><br><span class="line">toString.call(&#123;&#125;) <span class="comment">//[object Object]</span></span><br><span class="line">toString.call([]) <span class="comment">//[object Array]</span></span><br><span class="line">toString.call(<span class="string">&#x27;&#x27;</span>) <span class="comment">//[object String]</span></span><br><span class="line">toString.call(<span class="number">11</span>) <span class="comment">//[object Number]</span></span><br><span class="line">toString.call(<span class="literal">undefined</span>) <span class="comment">//[object undefined]</span></span><br><span class="line">toString.call(<span class="literal">null</span>) <span class="comment">//[object null]</span></span><br><span class="line">toString.call(<span class="keyword">new</span> <span class="built_in">Date</span>) <span class="comment">//[object Date]</span></span><br><span class="line">toString.call(<span class="built_in">Math</span>) <span class="comment">//[object Math]</span></span><br><span class="line">toString.call(<span class="built_in">window</span>) <span class="comment">//[object Window]</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS学习笔记</title>
      <link href="/2021/11/10/CSS-study/"/>
      <url>/2021/11/10/CSS-study/</url>
      
        <content type="html"><![CDATA[<h4 id="css单位"><a href="#css单位" class="headerlink" title="css单位"></a>css单位</h4><p>  分为两种绝对长度与相对长度</p><ul><li>绝对长度<ol><li>px 像素 像素是相对于屏幕分辨率的,页面按照精确像素展示,不会因其他元素的变化而变化</li><li>in 英寸 在css领域中,直接被映射成像素 1in===96px</li><li>cm 厘米 映射成像素 1cm=37.8px</li><li>mm 毫米 映射成像素 1mm=3.78px</li><li>pt 点 (1pt = 1/72 of 1in)</li><li>pc 派卡 (1pc = 12 pt)</li></ol></li><li>相对长度<ol><li>rem 相对于根元素的字体大小（font-size）</li><li>vw 相对于视口*宽度的 1%</li><li>vh 相对于视口*高度的 1%</li><li>em 相对于元素的字体大小（font-size）（2em 表示当前字体大小的 2 倍）</li><li>% 相对于父元素</li></ol></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>react全家桶使用注意</title>
      <link href="/2021/09/10/react%E5%85%A8%E5%AE%B6%E6%A1%B6%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F/"/>
      <url>/2021/09/10/react%E5%85%A8%E5%AE%B6%E6%A1%B6%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F/</url>
      
        <content type="html"><![CDATA[<ol><li>react脚手架有两种</li></ol><ul><li>通过create-react-app脚手架来构建react项目<br>(1). </li><li>通过umijs脚手架来构建react项目</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux学习</title>
      <link href="/2021/09/03/linux%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/09/03/linux%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><ol><li>cd .. 返回上级目录</li><li>pwd 显示工作路径</li><li>ls  查看目录中的文件</li><li>ls -a 显示隐藏文件</li><li>tree 显示文件和目录由根目录开始的树形结构</li><li>mkdir my 创建名称为my的目录</li><li>rm -f file 删除一个叫file的文件 </li><li>rmdir dir1 删除一个叫dir1的目录</li><li>cp file1 file2 将file1复制file2</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue全家桶使用注意</title>
      <link href="/2021/08/27/vue%E5%85%A8%E5%AE%B6%E6%A1%B6%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F/"/>
      <url>/2021/08/27/vue%E5%85%A8%E5%AE%B6%E6%A1%B6%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="set的使用"><a href="#set的使用" class="headerlink" title="$set的使用"></a>$set的使用</h3><p>vue是数据驱动视图更新的,但在没给数据双向绑定和data层级的非简单数据类型,就会存在视图无法更新的情况,这就用到$set来实现视图的更新.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$set(target,propertyName,value)</span><br><span class="line"><span class="comment">// 来实现视图的更新</span></span><br></pre></td></tr></table></figure><h3 id="组件间通讯方式"><a href="#组件间通讯方式" class="headerlink" title="组件间通讯方式"></a>组件间通讯方式</h3><ol><li>父传子<br>父子间组件通讯是 父组件通过v-bind给子组件绑定自定义属性,传通讯信息 子组件通过<code>props</code>接收父组件绑定的自定义属性值<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;children :msg=&#x27;info&#x27;&gt;&lt;/children&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Children from &#x27;@/components/Children.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      info: &#x27;你是我的儿子&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Children</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//  子组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;这是父组件的信息:&#123;&#123;msg&#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;children&#x27;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    msg: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &#x27;&#x27;,//默认值</span><br><span class="line">      require: true//是否必填</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>子传父<br>子组件通讯父组件是通过自定义事件来收子组件的值 子组件通过<code>$emit(组件自定义方法,要给父组件信息)</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;p&gt;这是儿子给我的信,信里写到: &#123;&#123;info&#125;&#125; &lt;/p&gt;</span><br><span class="line">    &lt;children @info=&#x27;getLetter&#x27;&gt;&lt;/children&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Children from &#x27;@/components/Children.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      info: &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getLetter(content) &#123;</span><br><span class="line">      this.info = content</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Children</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 子组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;giveFather&quot;&gt;点击发送信件&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;children&#x27;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    giveFather() &#123;</span><br><span class="line">      this.$emit(&#x27;info&#x27;, &#x27;父亲我想你了!&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>兄弟组件通讯<br>通过给全局创建一个<code>new Vue()</code>事件总线,并挂载在全局,<code>$emit()</code>和<code>$on</code>来实现兄弟组件的收发工作.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line">Vue.prototype.bus = <span class="keyword">new</span> Vue()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 组件1</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;giveBrother&quot;&gt;点击发送信件给我兄弟&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;children&#x27;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    giveBrother() &#123;</span><br><span class="line">      this.bus.$emit(&#x27;getMsg&#x27;, &#x27;兄弟你真的很棒!&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// 组件2</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;这是children给我的消息:&#123;&#123;info&#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;brother&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      info: &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.bus.$on(&#x27;getMsg&#x27;, value =&gt; &#123;</span><br><span class="line">      this.info = value</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>vuex 状态管理<br>对于兄弟组件和更为复杂的组件通讯,我们可以使用<code>vuex</code>的状态管理,来实现全局组件的通讯,但依然会出现页面刷行后 状态管理全重置的问题,我们可以配合<code>localStorage</code>来将其保存,再次加载的时候,先去获取浏览器缓存的东西,做加载</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>element 组件使用注意</title>
      <link href="/2021/08/26/element%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F/"/>
      <url>/2021/08/26/element%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="表格多选分页问题"><a href="#表格多选分页问题" class="headerlink" title="表格多选分页问题"></a>表格多选分页问题</h3><p>翻页时候,让表格多选记住上页的已选数据</p><ol><li>首先我们需要给table组件上加上 <code>row-key</code> 属性绑定数据的唯一键</li><li>在多选组件上加上 <code>reserve-selection</code> 并绑定true</li><li>在table组件上加上 <code>selection-change</code> 方法 这样就实现了分页记住上页的勾选数据<br>但这可仅仅不够,我们可能需要获取后台的数据,来实现回显</li><li>我们获取到后端数据库存的已选id,由于存在分页,所以当某页有所选id时就让其回显</li><li>先将所有的已选id存储在另一个变量中</li><li>表格行的回显,只能一行一行回显 通过table <code>toggleRowSelection</code> 方法来回显,这方法只能通过找到表格数据需要选中的行,将其设置成true就能将其回显</li><li>当回显过后,就将存储所有已选id的变量中删除对应元素</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/08/21/hello-world/"/>
      <url>/2021/08/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
